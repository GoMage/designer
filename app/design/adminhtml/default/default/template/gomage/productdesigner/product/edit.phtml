<?php
$image = $this->getImage();
?>
<?php if($image && $image->getId()): ?>
    <?php
    $w = 0;
    if ($this->getImageWidth() < 800) {
        $w = 400 - round($this->getImageWidth() / 2);
    }
    $settings = $this->getSettings();
    ?>
    <div id="textsize">
        <?php echo $this->__('Width'); ?> <input type="text" name="areaWidth" id="areaWidth" value="0" /><?php echo $this->__('px'); ?>
        <?php echo $this->__('Height'); ?> <input type="text" name="areaHeight" id="areaHeight" value="0" /><?php echo $this->__('px'); ?>
    </div>
    <div id="image_wrapper" style="margin-left:<?php echo $w; ?>px;width:<?php echo $this->getImageWidth(); ?>px;height:<?php echo $this->getImageHeight(); ?>px;background: url(<?php echo $this->getImage()->getUrl(); ?>) no-repeat center;border:1px solid #ccc">
        <canvas id="image" width="<?php echo $this->getImageWidth(); ?>" height="<?php echo $this->getImageHeight(); ?>"></canvas>
    </div>

    <div id="controls" class="form-buttons" style="margin-top:10px;width:100%;text-align:right;">
        <?php echo $this->__('Design Area used initial Cost'); ?>:
        <input type="text" id="initialPrice" name="initialPrice" value="<?php echo $settings['ip'] ? $settings['ip'] : 0; ?>" />
        <label for="side_selector"><?php echo Mage::helper('designer')->__('Choose a Side') ?> : </label>
        <select id="side_selector">
            <option value="1"><?php echo Mage::helper('designer')->__('Front') ?></option>
            <option value="2"><?php echo Mage::helper('designer')->__('Back') ?></option>
            <option value="3"><?php echo Mage::helper('designer')->__('Left') ?></option>
            <option value="4"><?php echo Mage::helper('designer')->__('Right') ?></option>
        </select>
        <button class="pd-btn scalable" type="button" id="save_settings"><?php echo Mage::helper('designer')->__('Save settings') ?></button>
    </div>

    <script type="text/javascript">
    (function() {
        var options = $$('select#side_selector option');
        options['<?php echo $settings["s"] - 1; ?>'].selected = true;

        var imgW = '<?php echo $this->getImageWidth(); ?>';
        var imgH = '<?php echo $this->getImageHeight(); ?>'

        var canvas = new fabric.Canvas('image');
        window.w = canvas;
        canvas.selection = false;

        var area = new fabric.Rect({
            top:    <?php echo $settings["t"]; ?>,
            left:   <?php echo $settings["l"]; ?>,
            width:  <?php echo $settings["w"]; ?>,
            height: <?php echo $settings["h"]; ?>,
            fill: '#d81417',
            opacity: 0.3
        });

        $('areaWidth').value = <?php echo $settings["w"] ?>;
        $('areaHeight').value = <?php echo $settings["h"] ?>;

        canvas.add(area);
        area.lockRotation = true;
        area.hasRotatingPoint = false;
        canvas.setActiveObject(area);
        canvas.renderAll();

        canvas.observe('object:moving', function(e) {
            var obj = e.target;
            var l = obj.get('left');
            var t = obj.get('top');
            var w = Math.round(obj.getWidth() / 2);
            var h = Math.round(obj.getHeight() / 2);

            if (l < w) {
                obj.set({left : w});
            }

            if (t < h) {
                obj.set({top : h});
            }

            if (l > canvas.getWidth() - w) {
                obj.set({left : canvas.getWidth() - w});
            }

            if (t > canvas.getHeight() - h) {
                obj.set({top : canvas.getHeight() - h});
            }
        });

        canvas.observe('object:scaling', function(e){
            setTimeout(function(){
                var obj = e.target;
                var w = Math.round(obj.getWidth());
                var h = Math.round(obj.getHeight());
                $('areaWidth').value = w;
                $('areaHeight').value = h;
            }, 100)
        });



        var onTextChangeSize = function(element){
            element.observe('keyup', function() {
                setTimeout(function(){
                    var widthOrHeight = false;
                    switch(element.id) {
                        case 'areaWidth' : {
                            widthOrHeight = 'width';
                            break;
                        }
                        case 'areaHeight' : {
                            widthOrHeight = 'height';
                            break;
                        }
                        default: {
                            widthOrHeight = false;
                            break;
                        }
                    }
                    if(typeof widthOrHeight === 'string') {
                        area.set(widthOrHeight,parseInt(element.value));
                        canvas.renderAll();
                    }
                }, 1000);
            });
        };
        $$('#areaWidth, #areaHeight').each(onTextChangeSize);

        $('save_settings').observe('click', function() {
            var data = {};
            data['t'] = Math.round(area.getTop());
            data['l'] = Math.round(area.getLeft());
            data['w'] = Math.round(area.getWidth());
            data['h'] = Math.round(area.getHeight());
            data['s'] = $('side_selector').value;
            data['image_id'] = '<?php echo $this->getImageId(); ?>';
            data['ip'] = $('initialPrice').value;

            new Ajax.Request('<?php echo $this->getSaveUrl() ?>', {
                method:'post',
                parameters: data,
                onSuccess: function(transport) {
                    var response = transport.responseText.evalJSON();
                    if (response.status == 'success') {
                        if (window.designAreaPopup.galleryObject && window.designAreaPopup.updateImageFile) {
                            window.designAreaPopup.galleryObject.updateImageDesignArea(
                                window.designAreaPopup.updateImageFile, Object.toJSON(data)
                            );
                        }
                        if (window.designAreaPopup.target != undefined) {
                            var state = window.designAreaPopup.target.previous();
                            if (state != undefined && state.type == 'checkbox') {
                                state.checked = true;
                            }
                        }
                        window.parent.Windows.closeAll();
                    } else if (response.status == 'error') {
                        console.log(response.message);
                    }
                },
                onFailure: function() {
                    // TODO
                    //alert('Something went wrong...');
                }
            });
        });
    })();
    </script>
<?php endif; ?>